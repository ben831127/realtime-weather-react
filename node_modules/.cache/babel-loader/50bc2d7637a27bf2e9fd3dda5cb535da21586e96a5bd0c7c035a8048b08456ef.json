{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nconst fetchCurrentWeather = async _ref => {\n  let {\n    authorizationKey,\n    locationName\n  } = _ref;\n  return fetch(`https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization=${AUTH_KEY}&locationName=${LOCATION}`).then(res => res.json()).then(data => {\n    const locationData = data.records.location[0];\n    const weatherElements = locationData.weatherElement.reduce((neededElements, item) => {\n      if ([\"WDSD\", \"TEMP\"].includes(item.elementName)) {\n        neededElements[item.elementName] = item.elementValue;\n      }\n      return neededElements;\n    }, {});\n    return {\n      locationName: locationData.locationName,\n      windSpeed: weatherElements.WDSD,\n      temperature: weatherElements.TEMP,\n      observationTime: locationData.time.obsTime\n    };\n  });\n};\nconst fetchWeatherForecast = async (AUTH_KEY, LOCATION_FORECAST) => {\n  return fetch(`https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001?Authorization=${AUTH_KEY}&locationName=${LOCATION_FORECAST}`).then(res => res.json()).then(data => {\n    const locationData = data.records.location[0];\n    const weatherElements = locationData.weatherElement.reduce((neededElements, item) => {\n      if ([\"Wx\", \"PoP\", \"CI\"].includes(item.elementName)) {\n        neededElements[item.elementName] = item.time[0].parameter;\n      }\n      return neededElements;\n    }, {});\n    return {\n      description: weatherElements.Wx.parameterName,\n      weatherCode: weatherElements.Wx.parameterValue,\n      rainPossibility: weatherElements.PoP.parameterName,\n      comfortability: weatherElements.CI.parameterName\n    };\n  });\n};\nexport default function useWeatherAPI(_ref2) {\n  _s();\n  let {\n    authorizationKey,\n    locationName,\n    cityName\n  } = _ref2;\n  const [weatherElement, setWeatherElement] = useState({\n    locationName: \"\",\n    description: \"\",\n    windSpeed: 0,\n    temperature: 0,\n    rainPossibility: 0,\n    observationTime: new Date(),\n    comfortability: \"\",\n    weatherCode: 0,\n    isLoading: true\n  });\n  const fetchData = useCallback(async () => {\n    setWeatherElement(prevState => ({\n      ...prevState,\n      isLoading: true\n    }));\n    const [currentWeather, weatherForecast] = await Promise.all([fetchCurrentWeather({\n      authorizationKey,\n      locationName\n    }), fetchWeatherForecast({\n      authorizationKey,\n      cityName\n    })]);\n    setWeatherElement({\n      ...currentWeather,\n      ...weatherForecast,\n      isLoading: false\n    });\n  }, [authorizationKey, locationName, cityName]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return [weatherElement, fetchData];\n}\n_s(useWeatherAPI, \"M0anvySkTUPt9sx/JppwXAT81rg=\");","map":{"version":3,"names":["useState","useEffect","useCallback","fetchCurrentWeather","_ref","authorizationKey","locationName","fetch","AUTH_KEY","LOCATION","then","res","json","data","locationData","records","location","weatherElements","weatherElement","reduce","neededElements","item","includes","elementName","elementValue","windSpeed","WDSD","temperature","TEMP","observationTime","time","obsTime","fetchWeatherForecast","LOCATION_FORECAST","parameter","description","Wx","parameterName","weatherCode","parameterValue","rainPossibility","PoP","comfortability","CI","useWeatherAPI","_ref2","_s","cityName","setWeatherElement","Date","isLoading","fetchData","prevState","currentWeather","weatherForecast","Promise","all"],"sources":["/Users/bsc/Desktop/realtime-weather-react/src/hooks/useWeatherAPI.js"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\n\nconst fetchCurrentWeather = async ({ authorizationKey, locationName }) => {\n  return fetch(\n    `https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization=${AUTH_KEY}&locationName=${LOCATION}`\n  )\n    .then((res) => res.json())\n    .then((data) => {\n      const locationData = data.records.location[0];\n      const weatherElements = locationData.weatherElement.reduce(\n        (neededElements, item) => {\n          if ([\"WDSD\", \"TEMP\"].includes(item.elementName)) {\n            neededElements[item.elementName] = item.elementValue;\n          }\n          return neededElements;\n        },\n        {}\n      );\n      return {\n        locationName: locationData.locationName,\n        windSpeed: weatherElements.WDSD,\n        temperature: weatherElements.TEMP,\n        observationTime: locationData.time.obsTime,\n      };\n    });\n};\n\nconst fetchWeatherForecast = async (AUTH_KEY, LOCATION_FORECAST) => {\n  return fetch(\n    `https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001?Authorization=${AUTH_KEY}&locationName=${LOCATION_FORECAST}`\n  )\n    .then((res) => res.json())\n    .then((data) => {\n      const locationData = data.records.location[0];\n      const weatherElements = locationData.weatherElement.reduce(\n        (neededElements, item) => {\n          if ([\"Wx\", \"PoP\", \"CI\"].includes(item.elementName)) {\n            neededElements[item.elementName] = item.time[0].parameter;\n          }\n          return neededElements;\n        },\n        {}\n      );\n      return {\n        description: weatherElements.Wx.parameterName,\n        weatherCode: weatherElements.Wx.parameterValue,\n        rainPossibility: weatherElements.PoP.parameterName,\n        comfortability: weatherElements.CI.parameterName,\n      };\n    });\n};\n\nexport default function useWeatherAPI({\n  authorizationKey,\n  locationName,\n  cityName,\n}) {\n  const [weatherElement, setWeatherElement] = useState({\n    locationName: \"\",\n    description: \"\",\n    windSpeed: 0,\n    temperature: 0,\n    rainPossibility: 0,\n    observationTime: new Date(),\n    comfortability: \"\",\n    weatherCode: 0,\n    isLoading: true,\n  });\n\n  const fetchData = useCallback(async () => {\n    setWeatherElement((prevState) => ({ ...prevState, isLoading: true }));\n    const [currentWeather, weatherForecast] = await Promise.all([\n      fetchCurrentWeather({ authorizationKey, locationName }),\n      fetchWeatherForecast({ authorizationKey, cityName }),\n    ]);\n    setWeatherElement({\n      ...currentWeather,\n      ...weatherForecast,\n      isLoading: false,\n    });\n  }, [authorizationKey, locationName, cityName]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return [weatherElement, fetchData];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}