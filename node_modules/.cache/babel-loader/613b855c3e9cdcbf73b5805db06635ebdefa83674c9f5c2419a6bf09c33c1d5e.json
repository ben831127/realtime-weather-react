{"ast":null,"code":"var _jsxFileName = \"/Users/bsc/Desktop/realtime-weather-react/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport classes from \"./App.module.scss\";\nimport { ReactComponent as DayCloudyIcon } from \"./images/day-cloudy.svg\";\nimport { ReactComponent as AirFlowIcon } from \"./images/airFlow.svg\";\nimport { ReactComponent as RainIcon } from \"./images/rain.svg\";\nimport { ReactComponent as RefreshIcon } from \"./images/refresh.svg\";\nimport { ReactComponent as LoadingIcon } from \"./images/loading.svg\";\nimport dayjs from \"dayjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AUTH_KEY = \"CWB-D99CD594-E7C2-445E-B41D-BE075D34F43A\";\nconst LOCATION = \"臺北\";\nconst LOCATION_FORECAST = \"臺北市\";\nconst fetchCurrentWeather = async () => {\n  return fetch(`https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization=${AUTH_KEY}&locationName=${LOCATION}`).then(res => res.json()).then(data => {\n    const locationData = data.records.location[0];\n    const weatherElements = locationData.weatherElement.reduce((neededElements, item) => {\n      if ([\"WDSD\", \"TEMP\"].includes(item.elementName)) {\n        neededElements[item.elementName] = item.elementValue;\n      }\n      return neededElements;\n    }, {});\n    return {\n      locationName: locationData.locationName,\n      windSpeed: weatherElements.WDSD,\n      temperature: weatherElements.TEMP,\n      observationTime: locationData.time.obsTime\n    };\n  });\n};\nconst fetchWeatherForecast = async () => {\n  return fetch(`https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001?Authorization=${AUTH_KEY}&locationName=${LOCATION_FORECAST}`).then(res => res.json()).then(data => {\n    const locationData = data.records.location[0];\n    const weatherElements = locationData.weatherElement.reduce((neededElements, item) => {\n      if ([\"Wx\", \"PoP\", \"CI\"].includes(item.elementName)) {\n        neededElements[item.elementName] = item.time[0].parameter;\n      }\n      return neededElements;\n    }, {});\n    return {\n      description: weatherElements.Wx.parameterName,\n      weatherCode: weatherElements.Wx.parameterValue,\n      rainPossibility: weatherElements.PoP.parameterName,\n      comfortability: weatherElements.CI.parameterName\n    };\n  });\n};\nfunction App() {\n  _s();\n  const [weatherElement, setWeatherElement] = useState({\n    locationName: \"\",\n    description: \"\",\n    windSpeed: 0,\n    temperature: 0,\n    rainPossibility: 0,\n    observationTime: new Date(),\n    comfortability: \"\",\n    weatherCode: 0,\n    isLoading: true\n  });\n  const {\n    observationTime,\n    locationName,\n    description,\n    windSpeed,\n    temperature,\n    rainPossibility,\n    comfortability,\n    isLoading\n  } = weatherElement;\n  useEffect(() => {\n    const fetchData = async () => {\n      setWeatherElement(prevState => ({\n        ...prevState,\n        isLoading: true\n      }));\n      const [currentWeather, weatherForecast] = await Promise.all([fetchCurrentWeather(), fetchWeatherForecast()]);\n      setWeatherElement({\n        ...currentWeather,\n        ...weatherForecast,\n        isLoading: false\n      });\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.weathercard,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.location,\n        children: locationName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.description,\n        children: [description, \" \", comfortability]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.currentweather,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.temperture,\n          children: [Math.round(temperature), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.celsius,\n            children: \"\\xB0C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DayCloudyIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.airFlow,\n        children: [/*#__PURE__*/_jsxDEV(AirFlowIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), windSpeed, \"m/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.rain,\n        children: [/*#__PURE__*/_jsxDEV(RainIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), rainPossibility, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isLoading ? classes.refreshloading : classes.refresh,\n        onClick: () => {\n          fetchData();\n        },\n        children: [\"\\u6700\\u5F8C\\u89C0\\u6E2C\\u6642\\u9593:\", new Intl.DateTimeFormat(\"zh-TW\", {\n          hour: \"numeric\",\n          minute: \"numeric\"\n        }).format(dayjs(observationTime)), \" \", isLoading ? /*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"C1fS3papY3v8N6ue94HJS+GERRw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","classes","ReactComponent","DayCloudyIcon","AirFlowIcon","RainIcon","RefreshIcon","LoadingIcon","dayjs","jsxDEV","_jsxDEV","AUTH_KEY","LOCATION","LOCATION_FORECAST","fetchCurrentWeather","fetch","then","res","json","data","locationData","records","location","weatherElements","weatherElement","reduce","neededElements","item","includes","elementName","elementValue","locationName","windSpeed","WDSD","temperature","TEMP","observationTime","time","obsTime","fetchWeatherForecast","parameter","description","Wx","parameterName","weatherCode","parameterValue","rainPossibility","PoP","comfortability","CI","App","_s","setWeatherElement","Date","isLoading","fetchData","prevState","currentWeather","weatherForecast","Promise","all","className","container","children","weathercard","fileName","_jsxFileName","lineNumber","columnNumber","currentweather","temperture","Math","round","celsius","airFlow","rain","refreshloading","refresh","onClick","Intl","DateTimeFormat","hour","minute","format","_c","$RefreshReg$"],"sources":["/Users/bsc/Desktop/realtime-weather-react/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport classes from \"./App.module.scss\";\nimport { ReactComponent as DayCloudyIcon } from \"./images/day-cloudy.svg\";\nimport { ReactComponent as AirFlowIcon } from \"./images/airFlow.svg\";\nimport { ReactComponent as RainIcon } from \"./images/rain.svg\";\nimport { ReactComponent as RefreshIcon } from \"./images/refresh.svg\";\nimport { ReactComponent as LoadingIcon } from \"./images/loading.svg\";\nimport dayjs from \"dayjs\";\n\nconst AUTH_KEY = \"CWB-D99CD594-E7C2-445E-B41D-BE075D34F43A\";\nconst LOCATION = \"臺北\";\nconst LOCATION_FORECAST = \"臺北市\";\n\nconst fetchCurrentWeather = async () => {\n  return fetch(\n    `https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization=${AUTH_KEY}&locationName=${LOCATION}`\n  )\n    .then((res) => res.json())\n    .then((data) => {\n      const locationData = data.records.location[0];\n      const weatherElements = locationData.weatherElement.reduce(\n        (neededElements, item) => {\n          if ([\"WDSD\", \"TEMP\"].includes(item.elementName)) {\n            neededElements[item.elementName] = item.elementValue;\n          }\n          return neededElements;\n        },\n        {}\n      );\n      return {\n        locationName: locationData.locationName,\n        windSpeed: weatherElements.WDSD,\n        temperature: weatherElements.TEMP,\n        observationTime: locationData.time.obsTime,\n      };\n    });\n};\n\nconst fetchWeatherForecast = async () => {\n  return fetch(\n    `https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001?Authorization=${AUTH_KEY}&locationName=${LOCATION_FORECAST}`\n  )\n    .then((res) => res.json())\n    .then((data) => {\n      const locationData = data.records.location[0];\n      const weatherElements = locationData.weatherElement.reduce(\n        (neededElements, item) => {\n          if ([\"Wx\", \"PoP\", \"CI\"].includes(item.elementName)) {\n            neededElements[item.elementName] = item.time[0].parameter;\n          }\n          return neededElements;\n        },\n        {}\n      );\n      return {\n        description: weatherElements.Wx.parameterName,\n        weatherCode: weatherElements.Wx.parameterValue,\n        rainPossibility: weatherElements.PoP.parameterName,\n        comfortability: weatherElements.CI.parameterName,\n      };\n    });\n};\n\nfunction App() {\n  const [weatherElement, setWeatherElement] = useState({\n    locationName: \"\",\n    description: \"\",\n    windSpeed: 0,\n    temperature: 0,\n    rainPossibility: 0,\n    observationTime: new Date(),\n    comfortability: \"\",\n    weatherCode: 0,\n    isLoading: true,\n  });\n\n  const {\n    observationTime,\n    locationName,\n    description,\n    windSpeed,\n    temperature,\n    rainPossibility,\n    comfortability,\n    isLoading,\n  } = weatherElement;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setWeatherElement((prevState) => ({ ...prevState, isLoading: true }));\n      const [currentWeather, weatherForecast] = await Promise.all([\n        fetchCurrentWeather(),\n        fetchWeatherForecast(),\n      ]);\n      setWeatherElement({\n        ...currentWeather,\n        ...weatherForecast,\n        isLoading: false,\n      });\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.weathercard}>\n        <div className={classes.location}>{locationName}</div>\n        <div className={classes.description}>\n          {description} {comfortability}\n        </div>\n        <div className={classes.currentweather}>\n          <div className={classes.temperture}>\n            {Math.round(temperature)}\n            <div className={classes.celsius}>°C</div>\n          </div>\n          <DayCloudyIcon></DayCloudyIcon>\n        </div>\n        <div className={classes.airFlow}>\n          <AirFlowIcon></AirFlowIcon>\n          {windSpeed}m/h\n        </div>\n        <div className={classes.rain}>\n          <RainIcon></RainIcon>\n          {rainPossibility}%\n        </div>\n        <div\n          className={isLoading ? classes.refreshloading : classes.refresh}\n          onClick={() => {\n            fetchData();\n          }}\n        >\n          最後觀測時間:\n          {new Intl.DateTimeFormat(\"zh-TW\", {\n            hour: \"numeric\",\n            minute: \"numeric\",\n          }).format(dayjs(observationTime))}{\" \"}\n          {isLoading ? (\n            <LoadingIcon></LoadingIcon>\n          ) : (\n            <RefreshIcon></RefreshIcon>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}