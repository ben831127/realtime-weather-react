{"ast":null,"code":"var _jsxFileName = \"/Users/bsc/Desktop/realtime-weather-react/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./App.module.scss\";\nimport WeatherIcon from \"./components/WeatherIcon\";\nimport { ReactComponent as AirFlowIcon } from \"./images/airFlow.svg\";\nimport { ReactComponent as RainIcon } from \"./images/rain.svg\";\nimport { ReactComponent as RefreshIcon } from \"./images/refresh.svg\";\nimport { ReactComponent as LoadingIcon } from \"./images/loading.svg\";\nimport dayjs from \"dayjs\";\nimport WeatherCard from \"./views/WeatherCard\";\nimport { getMoment } from \"./utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AUTH_KEY = \"CWB-D99CD594-E7C2-445E-B41D-BE075D34F43A\";\nconst LOCATION = \"臺北\";\nconst LOCATION_FORECAST = \"臺北市\";\nconst fetchCurrentWeather = async () => {\n  return fetch(`https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization=${AUTH_KEY}&locationName=${LOCATION}`).then(res => res.json()).then(data => {\n    const locationData = data.records.location[0];\n    const weatherElements = locationData.weatherElement.reduce((neededElements, item) => {\n      if ([\"WDSD\", \"TEMP\"].includes(item.elementName)) {\n        neededElements[item.elementName] = item.elementValue;\n      }\n      return neededElements;\n    }, {});\n    return {\n      locationName: locationData.locationName,\n      windSpeed: weatherElements.WDSD,\n      temperature: weatherElements.TEMP,\n      observationTime: locationData.time.obsTime\n    };\n  });\n};\nconst fetchWeatherForecast = async () => {\n  return fetch(`https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001?Authorization=${AUTH_KEY}&locationName=${LOCATION_FORECAST}`).then(res => res.json()).then(data => {\n    const locationData = data.records.location[0];\n    const weatherElements = locationData.weatherElement.reduce((neededElements, item) => {\n      if ([\"Wx\", \"PoP\", \"CI\"].includes(item.elementName)) {\n        neededElements[item.elementName] = item.time[0].parameter;\n      }\n      return neededElements;\n    }, {});\n    return {\n      description: weatherElements.Wx.parameterName,\n      weatherCode: weatherElements.Wx.parameterValue,\n      rainPossibility: weatherElements.PoP.parameterName,\n      comfortability: weatherElements.CI.parameterName\n    };\n  });\n};\nfunction App() {\n  _s();\n  const [weatherElement, setWeatherElement] = useState({\n    locationName: \"\",\n    description: \"\",\n    windSpeed: 0,\n    temperature: 0,\n    rainPossibility: 0,\n    observationTime: new Date(),\n    comfortability: \"\",\n    weatherCode: 0,\n    isLoading: true\n  });\n  const moment = getMoment(LOCATION_FORECAST);\n  const fetchData = useCallback(async () => {\n    setWeatherElement(prevState => ({\n      ...prevState,\n      isLoading: true\n    }));\n    const [currentWeather, weatherForecast] = await Promise.all([fetchCurrentWeather(), fetchWeatherForecast()]);\n    setWeatherElement({\n      ...currentWeather,\n      ...weatherForecast,\n      isLoading: false\n    });\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const {\n    observationTime,\n    locationName,\n    description,\n    windSpeed,\n    temperature,\n    rainPossibility,\n    comfortability,\n    weatherCode,\n    isLoading\n  } = weatherElement;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(WeatherCard, {\n      weatherElement: weatherElement,\n      moment: moment,\n      fetchData: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"M0anvySkTUPt9sx/JppwXAT81rg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useCallback","classes","WeatherIcon","ReactComponent","AirFlowIcon","RainIcon","RefreshIcon","LoadingIcon","dayjs","WeatherCard","getMoment","jsxDEV","_jsxDEV","AUTH_KEY","LOCATION","LOCATION_FORECAST","fetchCurrentWeather","fetch","then","res","json","data","locationData","records","location","weatherElements","weatherElement","reduce","neededElements","item","includes","elementName","elementValue","locationName","windSpeed","WDSD","temperature","TEMP","observationTime","time","obsTime","fetchWeatherForecast","parameter","description","Wx","parameterName","weatherCode","parameterValue","rainPossibility","PoP","comfortability","CI","App","_s","setWeatherElement","Date","isLoading","moment","fetchData","prevState","currentWeather","weatherForecast","Promise","all","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bsc/Desktop/realtime-weather-react/src/App.js"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./App.module.scss\";\nimport WeatherIcon from \"./components/WeatherIcon\";\nimport { ReactComponent as AirFlowIcon } from \"./images/airFlow.svg\";\nimport { ReactComponent as RainIcon } from \"./images/rain.svg\";\nimport { ReactComponent as RefreshIcon } from \"./images/refresh.svg\";\nimport { ReactComponent as LoadingIcon } from \"./images/loading.svg\";\nimport dayjs from \"dayjs\";\nimport WeatherCard from \"./views/WeatherCard\";\nimport { getMoment } from \"./utils/helpers\";\n\nconst AUTH_KEY = \"CWB-D99CD594-E7C2-445E-B41D-BE075D34F43A\";\nconst LOCATION = \"臺北\";\nconst LOCATION_FORECAST = \"臺北市\";\n\nconst fetchCurrentWeather = async () => {\n  return fetch(\n    `https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization=${AUTH_KEY}&locationName=${LOCATION}`\n  )\n    .then((res) => res.json())\n    .then((data) => {\n      const locationData = data.records.location[0];\n      const weatherElements = locationData.weatherElement.reduce(\n        (neededElements, item) => {\n          if ([\"WDSD\", \"TEMP\"].includes(item.elementName)) {\n            neededElements[item.elementName] = item.elementValue;\n          }\n          return neededElements;\n        },\n        {}\n      );\n      return {\n        locationName: locationData.locationName,\n        windSpeed: weatherElements.WDSD,\n        temperature: weatherElements.TEMP,\n        observationTime: locationData.time.obsTime,\n      };\n    });\n};\n\nconst fetchWeatherForecast = async () => {\n  return fetch(\n    `https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001?Authorization=${AUTH_KEY}&locationName=${LOCATION_FORECAST}`\n  )\n    .then((res) => res.json())\n    .then((data) => {\n      const locationData = data.records.location[0];\n      const weatherElements = locationData.weatherElement.reduce(\n        (neededElements, item) => {\n          if ([\"Wx\", \"PoP\", \"CI\"].includes(item.elementName)) {\n            neededElements[item.elementName] = item.time[0].parameter;\n          }\n          return neededElements;\n        },\n        {}\n      );\n      return {\n        description: weatherElements.Wx.parameterName,\n        weatherCode: weatherElements.Wx.parameterValue,\n        rainPossibility: weatherElements.PoP.parameterName,\n        comfortability: weatherElements.CI.parameterName,\n      };\n    });\n};\n\nfunction App() {\n  const [weatherElement, setWeatherElement] = useState({\n    locationName: \"\",\n    description: \"\",\n    windSpeed: 0,\n    temperature: 0,\n    rainPossibility: 0,\n    observationTime: new Date(),\n    comfortability: \"\",\n    weatherCode: 0,\n    isLoading: true,\n  });\n  const moment = getMoment(LOCATION_FORECAST);\n\n  const fetchData = useCallback(async () => {\n    setWeatherElement((prevState) => ({ ...prevState, isLoading: true }));\n    const [currentWeather, weatherForecast] = await Promise.all([\n      fetchCurrentWeather(),\n      fetchWeatherForecast(),\n    ]);\n    setWeatherElement({\n      ...currentWeather,\n      ...weatherForecast,\n      isLoading: false,\n    });\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  const {\n    observationTime,\n    locationName,\n    description,\n    windSpeed,\n    temperature,\n    rainPossibility,\n    comfortability,\n    weatherCode,\n    isLoading,\n  } = weatherElement;\n\n  return (\n    <div className={classes.container}>\n      <WeatherCard\n        weatherElement={weatherElement}\n        moment={moment}\n        fetchData={fetchData}\n      ></WeatherCard>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}