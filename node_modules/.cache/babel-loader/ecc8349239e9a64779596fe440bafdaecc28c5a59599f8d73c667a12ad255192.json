{"ast":null,"code":"var _jsxFileName = \"/Users/bsc/Desktop/realtime-weather-react/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport classes from \"./App.module.scss\";\nimport { ReactComponent as DayCloudyIcon } from \"./images/day-cloudy.svg\";\nimport { ReactComponent as AirFlowIcon } from \"./images/airFlow.svg\";\nimport { ReactComponent as RainIcon } from \"./images/rain.svg\";\nimport { ReactComponent as RefreshIcon } from \"./images/refresh.svg\";\nimport { ReactComponent as LoadingIcon } from \"./images/loading.svg\";\nimport dayjs from \"dayjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AUTH_KEY = \"CWB-D99CD594-E7C2-445E-B41D-BE075D34F43A\";\nconst LOCATION = \"臺北\";\nconst LOCATION_FORECAST = \"臺北市\";\nfunction App() {\n  _s();\n  const [weatherElement, setWeatherElement] = useState({\n    locationName: \"\",\n    description: \"\",\n    windSpeed: 0,\n    temperature: 0,\n    rainPossibility: 0,\n    observationTime: new Date(),\n    comfortability: \"\",\n    weatherCode: 0,\n    isLoading: true\n  });\n  const {\n    observationTime,\n    locationName,\n    description,\n    windSpeed,\n    temperature,\n    rainPossibility,\n    comfortability,\n    isLoading\n  } = weatherElement;\n  const fetchCurrentWeather = () => {\n    setWeatherElement(prevState => ({\n      ...prevState,\n      isLoading: true\n    }));\n    fetch(`https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization=${AUTH_KEY}&locationName=${LOCATION}`).then(res => res.json()).then(data => {\n      const locationData = data.records.location[0];\n      const weatherElements = locationData.weatherElement.reduce((neededElements, item) => {\n        if ([\"WDSD\", \"TEMP\"].includes(item.elementName)) {\n          neededElements[item.elementName] = item.elementValue;\n        }\n        return neededElements;\n      }, {});\n      setWeatherElement(prevState => ({\n        ...prevState,\n        locationName: locationData.locationName,\n        windSpeed: weatherElements.WDSD,\n        temperature: weatherElements.TEMP,\n        observationTime: locationData.time.obsTime,\n        isLoading: false\n      }));\n    });\n  };\n  const fetchWeatherForecast = () => {\n    fetch(`https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001?Authorization=${AUTH_KEY}&locationName=${LOCATION_FORECAST}`).then(res => res.json()).then(data => {\n      const locationData = data.records.location[0];\n      const weatherElements = locationData.weatherElement.reduce((neededElements, item) => {\n        if ([\"Wx\", \"PoP\", \"CI\"].includes(item.elementName)) {\n          neededElements[item.elementName] = item.time[0].parameter;\n        }\n        return neededElements;\n      }, {});\n      setWeatherElement(prevState => ({\n        ...prevState,\n        description: weatherElements.Wx.parameterName,\n        weatherCode: weatherElements.Wx.parameterValue,\n        rainPossibility: weatherElements.PoP.parameterName,\n        comfortability: weatherElements.CI.parameterName\n      }));\n    });\n  };\n  useEffect(() => {\n    fetchCurrentWeather();\n    fetchWeatherForecast();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.weathercard,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.location,\n        children: locationName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.description,\n        children: [description, \" \", comfortability]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.currentweather,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.temperture,\n          children: [Math.round(temperature), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.celsius,\n            children: \"\\xB0C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DayCloudyIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.airFlow,\n        children: [/*#__PURE__*/_jsxDEV(AirFlowIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), windSpeed, \"m/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.rain,\n        children: [/*#__PURE__*/_jsxDEV(RainIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), rainPossibility, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isLoading ? classes.refreshloading : classes.refresh,\n        onClick: () => {\n          fetchCurrentWeather();\n          fetchWeatherForecast();\n        },\n        children: [\"\\u6700\\u5F8C\\u89C0\\u6E2C\\u6642\\u9593:\", new Intl.DateTimeFormat(\"zh-TW\", {\n          hour: \"numeric\",\n          minute: \"numeric\"\n        }).format(dayjs(observationTime)), \" \", isLoading ? /*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"C1fS3papY3v8N6ue94HJS+GERRw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","classes","ReactComponent","DayCloudyIcon","AirFlowIcon","RainIcon","RefreshIcon","LoadingIcon","dayjs","jsxDEV","_jsxDEV","AUTH_KEY","LOCATION","LOCATION_FORECAST","App","_s","weatherElement","setWeatherElement","locationName","description","windSpeed","temperature","rainPossibility","observationTime","Date","comfortability","weatherCode","isLoading","fetchCurrentWeather","prevState","fetch","then","res","json","data","locationData","records","location","weatherElements","reduce","neededElements","item","includes","elementName","elementValue","WDSD","TEMP","time","obsTime","fetchWeatherForecast","parameter","Wx","parameterName","parameterValue","PoP","CI","className","container","children","weathercard","fileName","_jsxFileName","lineNumber","columnNumber","currentweather","temperture","Math","round","celsius","airFlow","rain","refreshloading","refresh","onClick","Intl","DateTimeFormat","hour","minute","format","_c","$RefreshReg$"],"sources":["/Users/bsc/Desktop/realtime-weather-react/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport classes from \"./App.module.scss\";\nimport { ReactComponent as DayCloudyIcon } from \"./images/day-cloudy.svg\";\nimport { ReactComponent as AirFlowIcon } from \"./images/airFlow.svg\";\nimport { ReactComponent as RainIcon } from \"./images/rain.svg\";\nimport { ReactComponent as RefreshIcon } from \"./images/refresh.svg\";\nimport { ReactComponent as LoadingIcon } from \"./images/loading.svg\";\nimport dayjs from \"dayjs\";\n\nconst AUTH_KEY = \"CWB-D99CD594-E7C2-445E-B41D-BE075D34F43A\";\nconst LOCATION = \"臺北\";\nconst LOCATION_FORECAST = \"臺北市\";\n\nfunction App() {\n  const [weatherElement, setWeatherElement] = useState({\n    locationName: \"\",\n    description: \"\",\n    windSpeed: 0,\n    temperature: 0,\n    rainPossibility: 0,\n    observationTime: new Date(),\n    comfortability: \"\",\n    weatherCode: 0,\n    isLoading: true,\n  });\n\n  const {\n    observationTime,\n    locationName,\n    description,\n    windSpeed,\n    temperature,\n    rainPossibility,\n    comfortability,\n    isLoading,\n  } = weatherElement;\n\n  const fetchCurrentWeather = () => {\n    setWeatherElement((prevState) => ({ ...prevState, isLoading: true }));\n    fetch(\n      `https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization=${AUTH_KEY}&locationName=${LOCATION}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        const locationData = data.records.location[0];\n        const weatherElements = locationData.weatherElement.reduce(\n          (neededElements, item) => {\n            if ([\"WDSD\", \"TEMP\"].includes(item.elementName)) {\n              neededElements[item.elementName] = item.elementValue;\n            }\n            return neededElements;\n          },\n          {}\n        );\n        setWeatherElement((prevState) => ({\n          ...prevState,\n          locationName: locationData.locationName,\n          windSpeed: weatherElements.WDSD,\n          temperature: weatherElements.TEMP,\n          observationTime: locationData.time.obsTime,\n          isLoading: false,\n        }));\n      });\n  };\n\n  const fetchWeatherForecast = () => {\n    fetch(\n      `https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001?Authorization=${AUTH_KEY}&locationName=${LOCATION_FORECAST}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        const locationData = data.records.location[0];\n        const weatherElements = locationData.weatherElement.reduce(\n          (neededElements, item) => {\n            if ([\"Wx\", \"PoP\", \"CI\"].includes(item.elementName)) {\n              neededElements[item.elementName] = item.time[0].parameter;\n            }\n            return neededElements;\n          },\n          {}\n        );\n        setWeatherElement((prevState) => ({\n          ...prevState,\n          description: weatherElements.Wx.parameterName,\n          weatherCode: weatherElements.Wx.parameterValue,\n          rainPossibility: weatherElements.PoP.parameterName,\n          comfortability: weatherElements.CI.parameterName,\n        }));\n      });\n  };\n\n  useEffect(() => {\n    fetchCurrentWeather();\n    fetchWeatherForecast();\n  }, []);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.weathercard}>\n        <div className={classes.location}>{locationName}</div>\n        <div className={classes.description}>\n          {description} {comfortability}\n        </div>\n        <div className={classes.currentweather}>\n          <div className={classes.temperture}>\n            {Math.round(temperature)}\n            <div className={classes.celsius}>°C</div>\n          </div>\n          <DayCloudyIcon></DayCloudyIcon>\n        </div>\n        <div className={classes.airFlow}>\n          <AirFlowIcon></AirFlowIcon>\n          {windSpeed}m/h\n        </div>\n        <div className={classes.rain}>\n          <RainIcon></RainIcon>\n          {rainPossibility}%\n        </div>\n        <div\n          className={isLoading ? classes.refreshloading : classes.refresh}\n          onClick={() => {\n            fetchCurrentWeather();\n            fetchWeatherForecast();\n          }}\n        >\n          最後觀測時間:\n          {new Intl.DateTimeFormat(\"zh-TW\", {\n            hour: \"numeric\",\n            minute: \"numeric\",\n          }).format(dayjs(observationTime))}{\" \"}\n          {isLoading ? (\n            <LoadingIcon></LoadingIcon>\n          ) : (\n            <RefreshIcon></RefreshIcon>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}